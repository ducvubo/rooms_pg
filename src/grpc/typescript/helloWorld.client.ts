// @generated by protobuf-ts 2.9.4 with parameter long_type_string,optimize_code_size
// @generated from protobuf file "helloWorld.proto" (package "HelloWorld", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { HelloWorldService } from "./helloWorld";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetHelloWorldResponse } from "./helloWorld";
import type { GetHelloWorldRequest } from "./helloWorld";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service HelloWorld.HelloWorldService
 */
export interface IHelloWorldServiceClient {
    /**
     * @generated from protobuf rpc: GetHelloWorld(HelloWorld.GetHelloWorldRequest) returns (HelloWorld.GetHelloWorldResponse);
     */
    getHelloWorld(input: GetHelloWorldRequest, options?: RpcOptions): UnaryCall<GetHelloWorldRequest, GetHelloWorldResponse>;
}
/**
 * @generated from protobuf service HelloWorld.HelloWorldService
 */
export class HelloWorldServiceClient implements IHelloWorldServiceClient, ServiceInfo {
    typeName = HelloWorldService.typeName;
    methods = HelloWorldService.methods;
    options = HelloWorldService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetHelloWorld(HelloWorld.GetHelloWorldRequest) returns (HelloWorld.GetHelloWorldResponse);
     */
    getHelloWorld(input: GetHelloWorldRequest, options?: RpcOptions): UnaryCall<GetHelloWorldRequest, GetHelloWorldResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetHelloWorldRequest, GetHelloWorldResponse>("unary", this._transport, method, opt, input);
    }
}
